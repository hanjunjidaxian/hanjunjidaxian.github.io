<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL</title>
      <link href="2021/04/13/mysql/"/>
      <url>2021/04/13/mysql/</url>
      
        <content type="html"><![CDATA[<h3 id="创建、删除、查看数据库"><a href="#创建、删除、查看数据库" class="headerlink" title="创建、删除、查看数据库"></a>创建、删除、查看数据库</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">database</span><span class="token punctuation">;</span> <span class="token comment">--查看当前数据库服务器中的所有库</span><span class="token keyword">create</span> <span class="token keyword">database</span> my_db1<span class="token punctuation">;</span> <span class="token comment">-- 创建mydb1库</span>针对多个单词不要使用驼峰命名，而是使用下划线连接<span class="token punctuation">,</span>可以使用my_db1<span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span> <span class="token comment">--查看所有库</span><span class="token keyword">use</span> my_db1<span class="token punctuation">;</span> <span class="token comment">--进入my_db1库</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span> <span class="token comment">--展示当前库中所有表</span><span class="token keyword">drop</span> <span class="token keyword">database</span> my_db1<span class="token punctuation">;</span> <span class="token comment">--删除my_db1库</span>如果库不存在会报错<span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> my_db1<span class="token punctuation">;</span>如果存在my_db1库就删除<span class="token punctuation">,</span>此语句解决了上条报错<span class="token keyword">create</span> <span class="token keyword">database</span> my_db1 <span class="token keyword">charset</span> utf8<span class="token punctuation">;</span>创建一个编码为utf8类型的库名为my_db1的库<span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> my_db1 <span class="token keyword">charset</span> utf8<span class="token punctuation">;</span>如果my_db1不存在<span class="token punctuation">,</span>创建一个编码为utf8类型的库名为my_db1的库<span class="token keyword">show</span> creata <span class="token keyword">database</span> my_db1<span class="token punctuation">;</span>查看指定库名my_db1使用的编码类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建、删除、查看表"><a href="#创建、删除、查看表" class="headerlink" title="创建、删除、查看表"></a>创建、删除、查看表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> my_db1<span class="token punctuation">;</span>选择数据库为my_db1<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> stu<span class="token punctuation">;</span>如果存在名称为stu的表 删除此表<span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span>列名 数据类型   列名 数据类型   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>示例:<span class="token keyword">create</span> <span class="token keyword">table</span> stu<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>   name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--name表示这一列,最多能存放50个字符</span>gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   birthday <span class="token keyword">date</span><span class="token punctuation">,</span>   score <span class="token keyword">double</span><span class="token punctuation">)</span><span class="token keyword">desc</span> stu<span class="token punctuation">;</span><span class="token comment">--查看stu表结构</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/loading.gif# eg" data-original="/2021/04/13/mysql/image-20201030000618981.png" alt="#stu"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> MYSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bug</title>
      <link href="2021/04/11/bug/"/>
      <url>2021/04/11/bug/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-Bug" data-language="Bug"><code class="language-Bug">Bug1 收录时间 2021.3.18报错内容:Exception in thread &quot;main&quot; java.lang.IndexOutOfBoundsException: Index: 300, Size: 5报错代码:代码:list.remove(300);报错原因:没有下标为300的元素,数组下标越界解决方案:1)可以根据下标删除已有元素,如list.remove(1)2)如果想删除指定元素,需要传对象list.remove(Integer.valueOf(300))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/loading.gif# eg" data-original="/2021/04/11/bug/Bug1.png" alt="#Bug1" title="未找到下标为300或300的变量"><br><br><br></p><pre class="line-numbers language-Bug2" data-language="Bug2"><code class="language-Bug2">收录时间 2021.3.20  0:38报错内容:Exception in thread &quot;main&quot; java.lang.NullPointerException报错代码:代码:for(int i &#x3D; 0 ;i &lt; 5;i++) &#123;if(Users[i].getCardNo().equals(cardNp) &amp;&amp; Users[i].getPassword().equals(password))&#125;报错原因:Users数组中内容为null 无法取出内容解决方案:1)更改结束条件 (int i &#x3D; 0; i &lt; size;i++)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/loading.gif# eg" data-original="/2021/04/11/bug/Bug2.png" alt="#Bug2" title="Users数组中内容为null 无法取出内容"><br><br><br></p><pre class="line-numbers language-Bug3" data-language="Bug3"><code class="language-Bug3">收录时间 2021.3.20  22:49报错内容:java.io.InvalidClassException: cn.tedu.serializable.Student; local class incompatible: stream classdesc serialVersionUID &#x3D; 5648240250298459244, local class serialVersionUID &#x3D; -3193364654654535741报错代码:out.writeObject(obj);报错原因:测试时,使用的是之前序列化的UID,和本次反序列化时的UID不匹配,所以报错解决方案:1)写好需要序列化对象类的UID,或者一次序列化对应一次反序列化,不匹配就报错<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/loading.gif# eg" data-original="/2021/04/11/bug/Bug3.png" alt="#Bug3" title="测试时,使用的是之前序列化的UID,和本次反序列化时的UID不匹配,所以报错"><br><br><br></p><pre class="line-numbers language-Bug4" data-language="Bug4"><code class="language-Bug4">收录时间 2021.3.23  23:18报错内容:Exception in thread &quot;main&quot; java.text.ParseException: Unparseable date: &quot;2019年&#x2F;03月&#x2F;27 00:00:00&quot;报错代码:SimpleDateFormat sdf &#x3D; new SimpleDateFormat(&quot;yyyy年&#x2F;mm月&#x2F;dd日 hh:MM:ss&quot;);Date date2 &#x3D; sdf.parse(&quot;2019年&#x2F;03月&#x2F;27 00:00:00&quot;);报错原因:sdf.parse 格式化日期与SimpleDateFormat内规定的语法不同 &quot;yyyy&#x2F;mm&#x2F;dd hh:MM:ss&quot;对应2019&#x2F;03&#x2F;27 00:00:00解决方案:1)修改SimpleDateFormat(&quot;yyyy年&#x2F;mm月&#x2F;dd日 hh:MM:ss&quot;) 内的规定方式2)修改转换的方式为上参数内的格式 sdf.parse(&quot;2019年&#x2F;03月&#x2F;27 00:00:00&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/loading.gif# eg" data-original="/2021/04/11/bug/Bug4.png" alt="#Bug4" title="sdf.parse 格式化日期与SimpleDateFormat内规定的语法不同"><br><br><br></p><pre class="line-numbers language-Bug5" data-language="Bug5"><code class="language-Bug5">收录时间 2021.3.24  11:18报错内容:java.lang.IllegalAccessException: Class cn.tedu.reflection.Test1_Reflection can not access a member of class cn.tedu.reflection.Person with modifiers &quot;private&quot;报错代码:method.invoke(obj, &quot;蟹老板&quot;,100);报错原因:因为反射的资源是被private修饰的解决方案:1) 设置df.setAccessible(true);把该Filed实例的对象的 accessible 标志设置为指示的布尔值。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/loading.gif# eg" data-original="/2021/04/11/bug/Bug5.png" alt="#Bug5" title="因为反射的资源是被private修饰的"><br><br><br></p><pre class="line-numbers language-Bug6" data-language="Bug6"><code class="language-Bug6">收录时间 2021.3.25  11:56报错内容:Exception in thread &quot;main&quot; java.net.ConnectException: Connection refused: connect报错代码:Socket socket &#x3D; new Socket(&quot;127.0.0.1&quot;,6666);报错原因:未开启服务器 连接不上 服务器不存在或者未开机或者端口不存在解决方案:1)先开启服务器 再连接<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/loading.gif# eg" data-original="/2021/04/11/bug/Bug6.png" alt="#Bug6" title="未开启服务器 连接不上 服务器不存在或者未开机或者端口不存在"><br><br><br></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java单词</title>
      <link href="2021/04/09/java/"/>
      <url>2021/04/09/java/</url>
      
        <content type="html"><![CDATA[<div style="color:blue;font-size:40px" align="center">Java常用单词</div><pre style="color:red;font-size:25px" txt-align="center">Throwable  可抛出的try 尝试　Exception 例外情况 可解决的报错方式 　final 最终的 可修饰类 方法 变量 修饰过后的元素无法被更改　Design 设计　abstract 抽象missmatch 不匹配的　static 静态　default 默认　extends 继承　implements 执行　import 输入　instanceof 关键字类型比较　interface 接口　native 本地的synchronized 同步throw 抛出transient 临时的volatile 不稳定的value 值@Override 重写charAt--判断字符串的下标concat--拼接,但不改变原串endsWith--判断是否以指定元素结尾startsWith--判断是否以指定元素开头equals--判断串的内容是否一致indexOf--判断字符第一次出现的位置LastindexOf--判断字符最后一次出现的位置length--长度toUpperCase--变大写toLowerCase--变小写trim--去掉收尾空格split--通过指定元素分隔valueOf--int10转String10getBytes--转成byte[]subString --截取子串,如果参数有两个,左闭右开[1,5)    add 加subtract 减multiply 乘divide 除</pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础单词 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
